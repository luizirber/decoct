name: Rust checks

on:
  push:
    branches: [latest]
  pull_request:
    branches: [latest]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [beta, stable, windows, macos]
        include:
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: stable
            os: ubuntu-latest
            rust: stable
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Set up Python 3.8
        if: matrix.os != 'windows-latest'
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install dependencies
        if: matrix.os != 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install sourmash

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install sourmash
        env:
          'CARGO_INCREMENTAL': '0'
          'RUSTFLAGS': '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'

      - name: Run Rust tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast --all --all-features
        env:
          'CARGO_INCREMENTAL': '0'
          'RUSTFLAGS': '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'

      - name: Collect coverage and generate report with grcov
        uses: actions-rs/grcov@5fe6a05253e7b682e01c8097b6e3ea4ce1aaeacc
        id: coverage

      - name: Upload Rust coverage to codecov
        uses: codecov/codecov-action@797e92895ec0eac368405352c0add9af878fe257
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ steps.coverage.outputs.report }}
          flags: rusttests
          fail_ci_if_error: true

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  wasm32-wasi:
    name: Run tests under wasm32-wasi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install wasm32-wasi target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-wasi
      - name: Install wasmtime
        run: "curl https://wasmtime.dev/install.sh -sSf | bash"
      - name: Add wasmtime to PATH
        run: echo "::add-path::$HOME/.wasmtime/bin"
      - name: Install cargo-wasi command
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --force cargo-wasi
      - name: Build code with cargo-wasi
        uses: actions-rs/cargo@v1
        with:
          command: wasi
          args: build
      - name: Run tests under wasm32-wasi
        uses: actions-rs/cargo@v1
        continue-on-error: true  ## TODO: remove this when tests work...
        with:
          command: wasi
          args: test

  publish:
    name: Publish (dry-run)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Make sure we can publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run

  minimum_rust_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.34.0
          override: true

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install sourmash

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast
